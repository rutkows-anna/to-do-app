{"version":3,"sources":["components/AddTask.js","components/ToDoItem.js","components/ToDoItemEdit.js","components/ToDo.js","components/Nav.js","components/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["AddTask","state","task","done","handleOnChange","event","setState","target","value","handleOnSubmit","preventDefault","user","firebase","auth","currentUser","fetch","DATABASE_URL","uid","method","body","JSON","stringify","then","props","onFetchTasks","handleOnKeypress","keyCode","classes","this","className","form","noValidate","autoComplete","onSubmit","Tooltip","title","placement","TextField","input","variant","color","size","onChange","onKeyPress","Button","type","startIcon","React","Component","withStyles","theme","width","maxWidth","marginTop","spacing","marginBottom","ToDoItem","handleOnDeleteTask","id","handleOnDoneTask","handleOnEditClick","onEdit","List","list","ListItem","dense","button","onClick","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","checked","ListItemText","undone","ListItemSecondaryAction","IconButton","backgroundColor","palette","background","paper","boxShadow","textDecoration","textDecorationColor","ToDoItemEdit","handleOnCloseClick","onClose","handleOnSaveClick","onSave","name","ToDo","todo","editId","loading","showDone","showUndone","fetchTasks","response","json","todoList","Object","keys","map","key","handleItemEdit","resetEditId","handleShowDone","handleShowUndone","handleDeleteShowDone","handleDeleteShowUndone","handleItemSave","handleOnSignOutClick","signOut","chips","Chip","label","clickable","chip","icon","onDelete","CircularProgress","loader","filter","todoItem","Fab","display","justifyContent","margin","Nav","nav","fontSize","style","letterSpacing","alignItems","flexDirection","icons","alignSelf","SignIn","email","password","error","errorStyle","signUp","validation","code","handleOnSignUp","createUserWithEmailAndPassword","database","ref","set","catch","signInWithEmailAndPassword","helperText","Link","component","link","fontWeight","marginLeft","App","onAuthStateChanged","Container","toDoApp","padding","minHeight","fontFamily","Boolean","window","location","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.14aac412.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, TextField, Tooltip } from \"@material-ui/core/\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"firebase\";\nimport { DATABASE_URL } from \"../index\";\n\nconst styles = (theme) => ({\n  form: {\n    width: \"100%\",\n    maxWidth: 600,\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n});\n\nclass AddTask extends React.Component {\n  state = {\n    task: \"\",\n    done: false,\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      task: event.target.value,\n    });\n  };\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo.json`, {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n    }).then(() => {\n      this.props.onFetchTasks();\n      this.setState({\n        task: \"\",\n      });\n    });\n  };\n\n  handleOnKeypress = (event) => {\n    if (event.keyCode === 13) {\n      this.handleOnSubmit();\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <form\n          className={classes.form}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={this.handleOnSubmit}\n        >\n          <Tooltip title=\"Wpisz zadanie\" placement=\"top-start\">\n            <TextField\n              className={classes.input}\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"small\"\n              onChange={this.handleOnChange}\n              value={this.state.task}\n              onKeyPress={this.handleOnKeypress}\n            />\n          </Tooltip>\n\n          <Button\n            className={classes.input}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<AddIcon />}\n          >\n            Dodaj zadanie\n          </Button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(AddTask);\n","import React from \"react\";\nimport {\n  Checkbox,\n  Tooltip,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from \"@material-ui/core/\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"firebase\";\nimport { DATABASE_URL } from \"../index\";\n\nconst styles = (theme) => ({\n  list: {\n    width: \"100%\",\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: theme.spacing(4),\n    boxShadow: \"0 .5rem 1rem rgba(0,0,0,0.15)\",\n  },\n  undone: {\n    color: \"rgba(0, 0, 0, 0.9)\",\n  },\n  done: {\n    color: \"rgba(0, 0, 0, 0.4)\",\n    textDecoration: \"line-through\",\n    textDecorationColor: \"rgba(0, 0, 0, 0.3)\",\n  },\n});\n\nclass ToDoItem extends React.Component {\n  state = {\n    task: this.props.task,\n    done: this.props.done,\n  };\n\n  handleOnDeleteTask = () => {\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo/${this.props.id}.json`, {\n      method: \"DELETE\",\n    }).then(() => {\n      this.props.onFetchTasks();\n    });\n  };\n  handleOnDoneTask = (event) => {\n    this.setState(\n      {\n        done: !this.state.done,\n      },\n      () => {\n        const user = firebase.auth().currentUser;\n        fetch(`${DATABASE_URL}/users/${user.uid}/todo/${this.props.id}.json`, {\n          method: \"PATCH\",\n          body: JSON.stringify({ done: this.state.done }),\n        }).then(() => {\n          this.props.onFetchTasks();\n        });\n      }\n    );\n  };\n\n  handleOnEditClick = (event) => {\n    event.preventDefault();\n    this.props.onEdit(this.props.id);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <List className={classes.list}>\n          <ListItem dense button onClick={this.handleOnDoneTask}>\n            <ListItemIcon>\n              <Tooltip\n                title={\n                  this.state.done\n                    ? \"Oznacz jako niezrobione\"\n                    : \"Oznacz jako zrobione\"\n                }\n              >\n                <Checkbox\n                  edge=\"start\"\n                  tabIndex={-1}\n                  disableRipple\n                  type=\"checkbox\"\n                  onChange={this.handleOnDoneTask}\n                  checked={this.state.done}\n                />\n              </Tooltip>\n            </ListItemIcon>\n            <ListItemText\n              className={this.state.done ? classes.done : classes.undone}\n            >\n              {this.props.task}\n            </ListItemText>\n            <ListItemSecondaryAction>\n              <Tooltip title=\"Edycja\">\n                <IconButton onClick={this.handleOnEditClick}>\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Usuń\">\n                <IconButton\n                  edge=\"end\"\n                  onClick={this.handleOnDeleteTask}\n                  color=\"secondary\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ToDoItem);\n","import React from \"react\";\nimport {\n  Tooltip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  TextField,\n} from \"@material-ui/core/\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"firebase\";\nimport { DATABASE_URL } from \"../index\";\n\nconst styles = (theme) => ({\n  list: {\n    width: \"100%\",\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: theme.spacing(2),\n    boxShadow: \"0 .5rem 1rem rgba(0,0,0,0.15)\",\n  },\n});\n\nclass ToDoItemEdit extends React.Component {\n  state = {\n    task: this.props.task,\n    done: this.props.done,\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      task: event.target.value,\n    });\n  };\n\n  handleOnCloseClick = () => {\n    this.props.onClose();\n  };\n\n  handleOnSaveClick = () => {\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo/${this.props.id}.json`, {\n      method: \"PUT\",\n      body: JSON.stringify(this.state),\n    }).then(() => {\n      this.props.onSave();\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <List className={classes.list}>\n          <ListItem dense>\n            <ListItemText>\n              <TextField\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n                name=\"task\"\n                value={this.state.task}\n                onChange={this.handleOnChange}\n              />{\" \"}\n            </ListItemText>\n            <ListItemSecondaryAction>\n              <Tooltip title=\"Zapisz\">\n                <IconButton onClick={this.handleOnSaveClick}>\n                  <SaveIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Anuluj\">\n                <IconButton onClick={this.handleOnCloseClick} color=\"secondary\">\n                  <CloseIcon />\n                </IconButton>\n              </Tooltip>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ToDoItemEdit);\n","import React from \"react\";\nimport AddTask from \"./AddTask\";\nimport ToDoItem from \"./ToDoItem\";\nimport ToDoItemEdit from \"./ToDoItemEdit\";\nimport { Tooltip, Fab, CircularProgress, Chip } from \"@material-ui/core/\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"firebase\";\nimport { DATABASE_URL } from \"../index\";\n\nconst styles = (theme) => ({\n  list: {\n    width: \"100%\",\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: theme.spacing(4),\n    boxShadow: \"0 .5rem 1rem rgba(0,0,0,0.15)\",\n  },\n  loader: {\n    marginBottom: theme.spacing(2),\n  },\n  chips: {\n    width: \"100%\",\n    marginBottom: theme.spacing(5),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  chip: {\n    margin: theme.spacing(1),\n  },\n  signOut: {\n    margin: \"1%\",\n  },\n});\nclass ToDo extends React.Component {\n  state = {\n    todo: [],\n    editId: null,\n    loading: true,\n    showDone: true,\n    showUndone: true,\n  };\n\n  fetchTasks = () => {\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo.json`)\n      .then((response) => response.json())\n      .then((todo) => {\n        const todoList = todo\n          ? Object.keys(todo).map((key) => {\n              return {\n                id: key,\n                ...todo[key],\n              };\n            })\n          : [];\n        this.setState({\n          todo: todoList,\n          loading: false,\n        });\n      });\n  };\n\n  handleItemEdit = (editId) => {\n    this.setState({\n      editId,\n    });\n  };\n\n  resetEditId = () => {\n    this.setState({\n      editId: null,\n    });\n  };\n\n  handleShowDone = () => {\n    this.setState({\n      showDone: true,\n    });\n  };\n\n  handleShowUndone = () => {\n    this.setState({\n      showUndone: true,\n    });\n  };\n\n  handleDeleteShowDone = () => {\n    this.setState({\n      showDone: false,\n    });\n  };\n\n  handleDeleteShowUndone = () => {\n    this.setState({\n      showUndone: false,\n    });\n  };\n\n  handleItemSave = () => {\n    this.fetchTasks();\n    this.resetEditId();\n  };\n\n  handleOnSignOutClick = () => {\n    firebase.auth().signOut();\n  };\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <AddTask onFetchTasks={this.fetchTasks} />\n        <div className={classes.chips}>\n          <Chip\n            size=\"small\"\n            label=\"ZROBIONE\"\n            clickable\n            className={classes.chip}\n            color={this.state.showDone ? \"secondary\" : \"default\"}\n            icon={<CheckBoxIcon />}\n            onClick={this.handleShowDone}\n            onDelete={this.handleDeleteShowDone}\n          />\n          {\"   \"}\n          <Chip\n            size=\"small\"\n            label=\"NIEZROBIONE\"\n            clickable\n            className={classes.chip}\n            color={this.state.showUndone ? \"secondary\" : \"default\"}\n            icon={<CheckBoxOutlineBlankIcon />}\n            onClick={this.handleShowUndone}\n            onDelete={this.handleDeleteShowUndone}\n          />\n        </div>\n        {this.state.loading ? (\n          <CircularProgress color=\"secondary\" className={classes.loader} />\n        ) : (\n          this.state.todo\n            .filter((todoItem) => {\n              if (this.state.showDone && this.state.showUndone) {\n                return true;\n              } else if (this.state.showDone) {\n                return todoItem.done === true;\n              } else if (this.state.showUndone) {\n                return todoItem.done === false;\n              } else {\n                return false;\n              }\n            })\n            .map((todoItem) =>\n              todoItem.id === this.state.editId ? (\n                <ToDoItemEdit\n                  key={todoItem.id}\n                  onClose={this.resetEditId}\n                  onSave={this.handleItemSave}\n                  onFetchTasks={this.fetchTasks}\n                  {...todoItem}\n                />\n              ) : (\n                <ToDoItem\n                  key={todoItem.id}\n                  onFetchTasks={this.fetchTasks}\n                  onEdit={this.handleItemEdit}\n                  {...todoItem}\n                />\n              )\n            )\n        )}\n        <Tooltip title=\"Wyloguj się\">\n          <Fab\n            color=\"secondary\"\n            className={classes.signOut}\n            onClick={this.handleOnSignOutClick}\n          >\n            <ExitToAppIcon />\n          </Fab>\n        </Tooltip>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ToDo);\n","import React from \"react\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = (theme) => ({\n  nav: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  icons: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  icon: {\n    display: \"flex\",\n    alignSelf: \"flex-end\",\n  },\n});\n\nclass Nav extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.nav}>\n        <ListAltIcon fontSize=\"large\" color=\"secondary\" />\n        <h1 style={{ letterSpacing: \"1px\" }}> to do list</h1>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Nav);\n","import React from \"react\";\nimport { Button, TextField, Link } from \"@material-ui/core/\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"firebase\";\n\nconst styles = (theme) => ({\n  form: {\n    width: \"100%\",\n    maxWidth: 400,\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: theme.spacing(3),\n  },\n  signUp: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  link: {\n    fontWeight: \"600\",\n    marginLeft: \"1.5%\",\n    fontSize: \"14px\",\n  },\n});\nclass SignIn extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    errorStyle: false,\n    signUp: false,\n  };\n\n  validation = (error) => {\n    if (error.code === \"auth/invalid-email\") {\n      return \"Niepoprawny adres e-mail.\";\n    } else if (error.code === \"auth/weak-password\") {\n      return \"Hasło musi posiadać co najmniej 6 znaków.\";\n    } else {\n      return \"Nieudana próba rejestracji.\";\n    }\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleOnSignUp = (event) => {\n    event.preventDefault();\n    this.setState({\n      signUp: !this.state.signUp,\n    });\n  };\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.signUp) {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then(() => {\n          const user = firebase.auth().currentUser;\n          firebase.database().ref(`/users/${user.uid}`).set({\n            email: this.state.email,\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            error: this.validation(error),\n            errorStyle: true,\n          });\n        });\n    } else {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .catch((error) => {\n          this.setState({\n            error: \"Nieudana próba logowania.\",\n            errorStyle: true,\n          });\n        });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <form\n          className={classes.form}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={this.handleOnSubmit}\n        >\n          <TextField\n            className={classes.input}\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            label=\"E-mail\"\n            name=\"email\"\n            autoComplete=\"username\"\n            value={this.state.email}\n            onChange={this.handleOnChange}\n            error={this.state.errorStyle}\n          />\n\n          <TextField\n            className={classes.input}\n            color=\"secondary\"\n            type=\"password\"\n            label=\"Hasło\"\n            name=\"password\"\n            variant=\"outlined\"\n            size=\"small\"\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handleOnChange}\n            helperText={this.state.error}\n            error={this.state.errorStyle}\n          />\n\n          <Button\n            className={classes.input}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            {\" \"}\n            {this.state.signUp ? \"Zarejestruj się\" : \"Zaloguj się\"}\n          </Button>\n          {this.state.signUp ? (\n            <p className={classes.signUp}>\n              Posiadasz już konto?{\" \"}\n              <Link\n                component=\"button\"\n                color=\"secondary\"\n                className={classes.link}\n                onClick={this.handleOnSignUp}\n              >\n                {\" \"}\n                Zaloguj się.\n              </Link>\n            </p>\n          ) : (\n            <p className={classes.signUp}>\n              Nie posiadasz jeszcze konta?{\" \"}\n              <Link\n                component=\"button\"\n                color=\"secondary\"\n                className={classes.link}\n                onClick={this.handleOnSignUp}\n              >\n                {\" \"}\n                Zarejestruj się.\n              </Link>\n            </p>\n          )}\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignIn);\n","import React from \"react\";\nimport ToDo from \"./components/ToDo\";\nimport Nav from \"./components/Nav\";\nimport { Container, CircularProgress } from \"@material-ui/core/\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SignIn from \"./components/SignIn\";\nimport firebase from \"firebase\";\n\nconst styles = (theme) => ({\n  toDoApp: {\n    padding: \"2%\",\n    width: \"100%\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    fontSize: \"14px\",\n    fontFamily: \"Roboto\",\n  },\n});\n\nclass App extends React.Component {\n  state = {\n    user: null,\n    loading: true,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (firebase.auth().currentUser) {\n        this.setState({\n          user: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          user: false,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <Container maxWidth=\"sm\" className={classes.toDoApp}>\n          <Nav />\n          {this.state.loading ? (\n            <CircularProgress color=\"secondary\" className={classes.loader} />\n          ) : this.state.user ? (\n            <ToDo />\n          ) : (\n            <SignIn />\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBqX0NLqBomHbVxppsvUju6myikZ7zJpqU\",\n  authDomain: \"todoapp-36408.firebaseapp.com\",\n  databaseURL: \"https://todoapp-36408.firebaseio.com\",\n  projectId: \"todoapp-36408\",\n  storageBucket: \"todoapp-36408.appspot.com\",\n  messagingSenderId: \"20656447326\",\n  appId: \"1:20656447326:web:a8975420dab8f64293b9cf\",\n};\n\nexport const DATABASE_URL = firebaseConfig.databaseURL;\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}