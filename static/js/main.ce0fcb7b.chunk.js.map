{"version":3,"sources":["components/AddTask.js","components/ToDoItem.js","components/ToDoItemEdit.js","components/ToDo.js","components/Nav.js","components/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["AddTask","state","task","done","handleOnChange","event","setState","target","value","handleOnKeyUp","key","handleOnSubmit","preventDefault","user","firebase","auth","currentUser","fetch","DATABASE_URL","uid","method","body","JSON","stringify","then","props","onFetchTasks","classes","this","className","form","noValidate","autoComplete","onSubmit","TextField","input","variant","color","size","onChange","onKeyUp","Button","type","startIcon","React","Component","withStyles","theme","width","maxWidth","marginTop","spacing","marginBottom","ToDoItem","handleOnDeleteTask","id","handleOnDoneTask","handleOnEditClick","onEdit","console","log","List","list","ListItem","dense","button","onClick","ListItemIcon","Tooltip","title","Checkbox","edge","tabIndex","disableRipple","checked","ListItemText","undone","ListItemSecondaryAction","IconButton","backgroundColor","palette","background","paper","boxShadow","textDecoration","textDecorationColor","ToDoItemEdit","handleOnCloseClick","onClose","handleOnSaveClick","onSave","name","ToDo","todo","editId","fetchTasks","response","json","todoList","Object","keys","map","handleItemEdit","resetEditId","handleItemSave","handleOnSignOutClick","signOut","todoItem","Fab","icon","Nav","nav","fontSize","style","letterSpacing","display","justifyContent","alignItems","flexDirection","icons","alignSelf","SignIn","email","password","error","errorStyle","signUp","validation","code","handleOnSignUp","createUserWithEmailAndPassword","database","ref","set","catch","signInWithEmailAndPassword","userData","label","helperText","Link","component","link","fontWeight","marginLeft","App","handleLogin","onAuthStateChanged","Container","toDoApp","onLogin","padding","height","fontFamily","Boolean","window","location","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mTAqBMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAM,G,EAGRC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZJ,KAAMG,EAAME,OAAOC,S,EAIvBC,cAAgB,SAACJ,GACG,UAAdA,EAAMK,KACR,EAAKC,kB,EAITA,eAAiB,SAACN,GAChBA,EAAMO,iBACN,IAAMC,EAAOC,IAASC,OAAOC,YAC7BC,MAAM,GAAD,OAAIC,GAAJ,kBAA0BL,EAAKM,IAA/B,cAAgD,CACnDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,EAAKtB,SACzBuB,MAAK,WACN,EAAKC,MAAMC,eACX,EAAKpB,SAAS,CACZJ,KAAM,S,uDAKF,IACAyB,EAAYC,KAAKH,MAAjBE,QACR,OACE,oCACE,0BACAE,UAAWF,EAAQG,KACjBC,YAAU,EACVC,aAAa,MACbC,SAAUL,KAAKjB,gBAEd,kBAACuB,EAAA,EAAD,CACCL,UAAWF,EAAQQ,MACnBC,QAAQ,WACRC,MAAM,YACNC,KAAK,QACLC,SAAUX,KAAKxB,eACfoC,QAASZ,KAAKnB,cACdD,MAAOoB,KAAK3B,MAAMC,OAIpB,kBAACuC,EAAA,EAAD,CACAZ,UAAWF,EAAQQ,MACjBO,KAAK,SACLN,QAAQ,YACRC,MAAM,YACNM,UAAW,kBAAC,IAAD,OALb,uB,GArDYC,IAAMC,WAoEbC,eAjFA,SAAAC,GAAK,MAAK,CACvBjB,KAAM,CACJkB,MAAO,OACPC,SAAU,IACVC,UAAWH,EAAMI,QAAQ,GACzBC,aAAcL,EAAMI,QAAQ,IAE9BhB,MAAO,CACLa,MAAO,OACPI,aAAcL,EAAMI,QAAQ,OAwEjBL,CAAmB9C,G,0GC/D5BqD,E,4MACJpD,MAAQ,CACNC,KAAM,EAAKuB,MAAMvB,KACjBC,KAAM,EAAKsB,MAAMtB,M,EAGnBmD,mBAAqB,WACnB,IAAMzC,EAAOC,IAASC,OAAOC,YAC7BC,MAAM,GAAD,OAAIC,GAAJ,kBAA0BL,EAAKM,IAA/B,iBAA2C,EAAKM,MAAM8B,GAAtD,SAAiE,CACpEnC,OAAQ,WACPI,MAAK,WACN,EAAKC,MAAMC,mB,EAGf8B,iBAAmB,SAACnD,GAClB,EAAKC,SACH,CACEH,MAAO,EAAKF,MAAME,OAEpB,WACE,IAAMU,EAAOC,IAASC,OAAOC,YAC7BC,MAAM,GAAD,OAAIC,GAAJ,kBAA0BL,EAAKM,IAA/B,iBAA2C,EAAKM,MAAM8B,GAAtD,SAAiE,CACpEnC,OAAQ,MACRC,KAAMC,KAAKC,UAAU,EAAKtB,SACzBuB,MAAK,WACN,EAAKC,MAAMC,sB,EAMnB+B,kBAAoB,SAACpD,GACnBA,EAAMO,iBACN,EAAKa,MAAMiC,OAAO,EAAKjC,MAAM8B,IAC7BI,QAAQC,IAAI,EAAKnC,MAAM8B,K,uDAGf,IACA5B,EAAYC,KAAKH,MAAjBE,QACR,OACE,oCACA,kBAACkC,EAAA,EAAD,CAAMhC,UAAWF,EAAQmC,MACrB,kBAACC,EAAA,EAAD,CAAUC,OAAK,EAACC,QAAM,EAACC,QAAStC,KAAK4B,kBACjC,kBAACW,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAASC,MAAOzC,KAAK3B,MAAME,KAAO,0BAA4B,wBAC5D,kBAACmE,EAAA,EAAD,CACAC,KAAK,QACLC,UAAW,EACXC,eAAa,EACX/B,KAAK,WACLH,SAAUX,KAAK4B,iBACfkB,QAAS9C,KAAK3B,MAAME,SAI1B,kBAACwE,EAAA,EAAD,CAAc9C,UAAWD,KAAK3B,MAAME,KAAOwB,EAAQxB,KAAOwB,EAAQiD,QAC7DhD,KAAKH,MAAMvB,MAEhB,kBAAC2E,EAAA,EAAD,KACA,kBAACT,EAAA,EAAD,CAASC,MAAM,UACb,kBAACS,EAAA,EAAD,CAAaZ,QAAStC,KAAK6B,mBACxB,kBAAC,IAAD,QAGH,kBAACW,EAAA,EAAD,CAASC,MAAM,aACf,kBAACS,EAAA,EAAD,CAAYP,KAAK,MAAML,QAAStC,KAAK0B,mBAAoBjB,MAAM,aAC5D,kBAAC,IAAD,gB,GAlEMO,IAAMC,WA8EdC,eAhGA,SAAAC,GAAK,MAAK,CACvBe,KAAM,CACJd,MAAO,OACPC,SAAU,IACV8B,gBAAiBhC,EAAMiC,QAAQC,WAAWC,MAC1C9B,aAAcL,EAAMI,QAAQ,GAC5BgC,UAAW,iCAEbP,OAAQ,CACNvC,MAAO,sBAETlC,KAAM,CACJkC,MAAO,qBACP+C,eAAgB,eAChBC,oBAAqB,yBAkFVvC,CAAmBO,G,kCCrF5BiC,E,4MACJrF,MAAQ,CACNC,KAAM,EAAKuB,MAAMvB,KACjBC,KAAM,EAAKsB,MAAMtB,M,EAGnBC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZJ,KAAMG,EAAME,OAAOC,S,EAIvB+E,mBAAqB,WACnB,EAAK9D,MAAM+D,W,EAGbC,kBAAoB,WAClB,IAAM5E,EAAOC,IAASC,OAAOC,YAC7BC,MAAM,GAAD,OAAIC,GAAJ,kBAA0BL,EAAKM,IAA/B,iBAA2C,EAAKM,MAAM8B,GAAtD,SAAiE,CACpEnC,OAAQ,MACRC,KAAMC,KAAKC,UAAU,EAAKtB,SACzBuB,MAAK,WACN,EAAKC,MAAMiE,a,uDAIL,IACA/D,EAAYC,KAAKH,MAAjBE,QACR,OACE,oCACD,kBAACkC,EAAA,EAAD,CAAMhC,UAAWF,EAAQmC,MACzB,kBAACC,EAAA,EAAD,CAAUC,OAAK,EAACC,QAAM,EAACC,QAAStC,KAAK4B,kBACnC,kBAACW,EAAA,EAAD,KACA,kBAACG,EAAA,EAAD,CACAC,KAAK,QACLC,UAAW,EACXC,eAAa,EACX/B,KAAK,WACLH,SAAUX,KAAK4B,iBACfkB,QAAS9C,KAAK3B,MAAME,QAGtB,kBAACwE,EAAA,EAAD,KACE,kBAACzC,EAAA,EAAD,CACGE,QAAQ,WACRC,MAAM,YACNC,KAAK,QACHqD,KAAK,OACLnF,MAAOoB,KAAK3B,MAAMC,KAClBqC,SAAUX,KAAKxB,iBAPtB,KASA,kBAACyE,EAAA,EAAD,KACA,kBAACT,EAAA,EAAD,CAASC,MAAM,UACf,kBAACS,EAAA,EAAD,CAAYZ,QAAStC,KAAK6D,mBACnB,kBAAC,IAAD,QAGL,kBAACrB,EAAA,EAAD,CAASC,MAAM,UACV,kBAACS,EAAA,EAAD,CAAYZ,QAAStC,KAAK2D,mBAAoBlD,MAAM,aACpD,kBAAC,IAAD,gB,GA3DaO,IAAMC,WAuElBC,eAjFA,SAAAC,GAAK,MAAK,CACvBe,KAAM,CACJd,MAAO,OACPC,SAAU,IACV8B,gBAAiBhC,EAAMiC,QAAQC,WAAWC,MAC1C9B,aAAcL,EAAMI,QAAQ,GAC5BgC,UAAW,oCA2EArC,CAAmBwC,G,0BCtE5BM,E,4MACJ3F,MAAQ,CACN4F,KAAM,GACNC,OAAQ,M,EAGVC,WAAa,WACX,IAAMlF,EAAOC,IAASC,OAAOC,YAC7BC,MAAM,GAAD,OAAIC,GAAJ,kBAA0BL,EAAKM,IAA/B,eACFK,MAAK,SAACwE,GAAD,OAAcA,EAASC,UAC5BzE,MAAK,SAACqE,GACL,IAAMK,EAAWL,EACbM,OAAOC,KAAKP,GAAMQ,KAAI,SAAC3F,GACrB,OAAO,aACL6C,GAAI7C,GACDmF,EAAKnF,OAGZ,GACJ,EAAKJ,SAAS,CACZuF,KAAMK,Q,EAKdI,eAAiB,SAACR,GAChB,EAAKxF,SAAS,CACZwF,Y,EAIJS,YAAc,WACZ,EAAKjG,SAAS,CACZwF,OAAQ,Q,EAIZU,eAAiB,WACf,EAAKT,aACL,EAAKQ,e,EAGPE,qBAAuB,WACrB3F,IAASC,OAAO2F,W,kEAIhB9E,KAAKmE,e,+BAGG,IAAD,OACCpE,EAAYC,KAAKH,MAAjBE,QACR,OACE,oCACA,kBAAC,EAAD,CAASD,aAAcE,KAAKmE,aAC3BnE,KAAK3B,MAAM4F,KACLQ,KAAI,SAACM,GAAD,OACHA,EAASpD,KAAO,EAAKtD,MAAM6F,OACzB,kBAAC,EAAD,eACEpF,IAAKiG,EAASpD,GACdiC,QAAS,EAAKe,YACdb,OAAQ,EAAKc,eACb9E,aAAc,EAAKqE,YACfY,IAGN,kBAAC,EAAD,eACEjG,IAAKiG,EAASpD,GACd7B,aAAc,EAAKqE,WACnBrC,OAAQ,EAAK4C,gBACTK,OAIT,kBAACvC,EAAA,EAAD,CAASC,MAAM,oBACZ,kBAACuC,EAAA,EAAD,CAAKvE,MAAM,YAAYR,UAAWF,EAAQkF,KAAM3C,QAAStC,KAAK6E,sBAC1D,kBAAC,IAAD,a,GA5ED7D,IAAMC,WAoFVC,eA7FA,SAAAC,GAAK,MAAK,CACvBe,KAAM,CACJd,MAAO,OACPC,SAAU,IACV8B,gBAAiBhC,EAAMiC,QAAQC,WAAWC,MAC1C9B,aAAcL,EAAMI,QAAQ,GAC5BgC,UAAW,oCAuFArC,CAAmB8C,G,iBChF5BkB,E,uKACM,IACAnF,EAAYC,KAAKH,MAAjBE,QACR,OACE,yBAAKE,UAAWF,EAAQoF,KACpB,kBAAC,IAAD,CAAaC,SAAS,QAAQ3E,MAAM,cACzC,wBAAI4E,MAAO,CAACC,cAAe,QAA3B,oB,GANatE,IAAMC,WAaTC,eAjCA,SAAAC,GAAK,MAAK,CACvBgE,IAAK,CACH/D,MAAO,OACPmE,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,UAEjBC,MAAO,CACLJ,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,cAAe,UAEjBT,KAAM,CACJM,QAAS,OACTK,UAAW,eAiBA1E,CAAmBgE,G,0BCV5BW,E,4MAEFxH,MAAQ,CACJyH,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,YAAY,EACZC,QAAQ,G,EAIZC,WAAa,SAACH,GACV,MAAkB,uBAAfA,EAAMI,KACC,4BACgB,uBAAfJ,EAAMI,KACP,yDAEA,kC,EAId5H,eAAiB,SAACC,GACd,EAAKC,SAAL,eACKD,EAAME,OAAOoF,KAAOtF,EAAME,OAAOC,S,EAI1CyH,eAAiB,SAAC5H,GACdA,EAAMO,iBACN,EAAKN,SAAS,CACVwH,QAAS,EAAK7H,MAAM6H,U,EAI5BnH,eAAiB,SAACN,GACdA,EAAMO,iBAEH,EAAKX,MAAM6H,OACVhH,IAASC,OACRmH,+BAA+B,EAAKjI,MAAMyH,MAAO,EAAKzH,MAAM0H,UAC5DnG,MAAK,WACF,IAAMX,EAAOC,IAASC,OAAOC,YAC7BF,IACSqH,WACAC,IAFT,iBAEuBvH,EAAKM,MACnBkH,IAAI,CACHX,MAAO,EAAKzH,MAAMyH,WAG/BY,OAAM,SAACV,GACN,EAAKtH,SAAS,CACZsH,MAAO,EAAKG,WAAWH,GACvBC,YAAY,OAKpB/G,IAASC,OACAwH,2BAA2B,EAAKtI,MAAMyH,MAAO,EAAKzH,MAAM0H,UACxDnG,MAAK,SAACgH,GACH7E,QAAQC,IAAI4E,MAEfF,OAAM,SAACV,GACN,EAAKtH,SAAS,CACZsH,MAAO,+BACPC,YAAY,Q,uDAMlB,IACAlG,EAAYC,KAAKH,MAAjBE,QACR,OACE,oCACA,0BACAE,UAAWF,EAAQG,KACjBC,YAAU,EACVC,aAAa,MACbC,SAAUL,KAAKjB,gBAEd,kBAACuB,EAAA,EAAD,CACCL,UAAWF,EAAQQ,MACnBC,QAAQ,WACRC,MAAM,YACNC,KAAK,QACLmG,MAAM,SACE9C,KAAK,QACL3D,aAAa,WACbxB,MAAOoB,KAAK3B,MAAMyH,MAClBnF,SAAUX,KAAKxB,eACfwH,MAAOhG,KAAK3B,MAAM4H,aAItC,kBAAC3F,EAAA,EAAD,CACoBL,UAAWF,EAAQQ,MACnBE,MAAM,YACNK,KAAK,WACL+F,MAAM,aACN9C,KAAK,WACLvD,QAAQ,WACRE,KAAK,QACLN,aAAa,mBACbxB,MAAOoB,KAAK3B,MAAM0H,SAClBpF,SAAUX,KAAKxB,eACfsI,WAAY9G,KAAK3B,MAAM2H,MACvBA,MAAOhG,KAAK3B,MAAM4H,aAG5B,kBAACpF,EAAA,EAAD,CACEZ,UAAWF,EAAQQ,MACfO,KAAK,SACLN,QAAQ,YACRC,MAAM,aAJZ,IAKIT,KAAK3B,MAAM6H,OAAS,uBAAoB,oBAE5ClG,KAAK3B,MAAM6H,OACV,uBAAGjG,UAAWF,EAAQmG,QAAtB,6BAAmD,kBAACa,EAAA,EAAD,CAAMC,UAAU,SAAQvG,MAAM,YAAYR,UAAWF,EAAQkH,KAAM3E,QAAStC,KAAKqG,gBAAjF,uBAEpD,uBAAGpG,UAAWF,EAAQmG,QAAtB,iCAA4D,kBAACa,EAAA,EAAD,CAAMC,UAAU,SAASvG,MAAM,YAAYR,UAAWF,EAAQkH,KAAO3E,QAAStC,KAAKqG,gBAAnF,iC,GAxHjDrF,IAAMC,WAiIVC,gBAvJF,SAAAC,GAAK,MAAK,CACrBjB,KAAM,CACFkB,MAAO,OACPC,SAAU,IACVC,UAAWH,EAAMI,QAAQ,GACzBC,aAAcL,EAAMI,QAAQ,IAE9BhB,MAAO,CACLa,MAAO,OACPI,aAAcL,EAAMI,QAAQ,IAE9B2E,OAAQ,CACNX,QAAS,OACTC,eAAgB,UAGlByB,KAAM,CACJC,WAAY,MACZC,WAAY,OACZ/B,SAAU,WAoIDlE,CAAmB2E,GCnI9BuB,G,4MACJ/I,MAAQ,CACNY,KAAM,M,EAGRoI,YAAc,WACZ,EAAK3I,SAAS,CACZO,KAvBQ,W,kEA2BS,IAAD,OAClBC,IAASC,OAAOmI,oBAAmB,SAACrI,GAC9BC,IAASC,OAAOC,YAClB,EAAKV,SAAS,CACZO,KAhCK,WAmCP,EAAKP,SAAS,CACZO,KAAM,Y,+BAMJ,IACAc,EAAYC,KAAKH,MAAjBE,QACR,OACE,oCACA,kBAACwH,EAAA,EAAD,CAAWtH,UAAWF,EAAQyH,SAC1B,kBAAC,EAAD,MA/CK,WAgDHxH,KAAK3B,MAAMY,KAAkB,kBAAC,EAAD,MAAW,kBAAC,GAAD,CAAQwI,QAASzH,KAAKqH,oB,GA/BxDrG,IAAMC,WAsCTC,gBAnDA,SAAAC,GAAK,MAAK,CACrBqG,QAAS,CACPE,QAAS,KACTC,OAAQ,QACRpC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,SACfN,SAAU,OACVwC,WAAY,aA0CH1G,CAAmBkG,ICnDdS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXN,IAAMC,GAAiB,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,cACnBC,MAAO,4CAGInJ,GAAe4I,GAAeG,YAC3CnJ,IAASwJ,cAAcR,IAEvBS,IAASC,OACL,kBAAC,GAAD,MACFC,SAASC,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrJ,MAAK,SAAAsJ,GACJA,EAAaC,gBAEdzC,OAAM,SAAAV,GACLjE,QAAQiE,MAAMA,EAAMoD,a","file":"static/js/main.ce0fcb7b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, TextField } from '@material-ui/core/';\nimport AddIcon from '@material-ui/icons/Add';\nimport { withStyles } from '@material-ui/core/styles';\nimport firebase from \"firebase\";\nimport { DATABASE_URL } from \"../index\";\n\n\nconst styles = theme => ({\n  form: {\n    width: '100%',\n    maxWidth: 600, \n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n  input: {\n    width: '100%',\n    marginBottom: theme.spacing(3),\n  }\n})\n\nclass AddTask extends React.Component {\n  state = {\n    task: \"\",\n    done: false,\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      task: event.target.value,\n    });\n  };\n\n  handleOnKeyUp = (event) => {\n    if (event.key === \"Enter\") {\n      this.handleOnSubmit();\n    }\n  };\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo.json`, {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n    }).then(() => {\n      this.props.onFetchTasks();\n      this.setState({\n        task: \"\",\n      });\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <form\n        className={classes.form}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={this.handleOnSubmit}\n        >\n           <TextField\n            className={classes.input}\n            variant=\"outlined\"\n            color=\"secondary\"\n            size='small'\n            onChange={this.handleOnChange}\n            onKeyUp={this.handleOnKeyUp}\n            value={this.state.task}\n\n  />\n        \n          <Button\n          className={classes.input}\n            type=\"submit\"\n            variant=\"contained\" \n            color=\"secondary\"\n            startIcon={<AddIcon/>}\n          >\n             Dodaj zadanie\n          </Button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(AddTask);","import React from \"react\";\nimport { Checkbox, Tooltip, List, ListItem, ListItemIcon, ListItemText, ListItemSecondaryAction, IconButton  } from '@material-ui/core/';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withStyles } from '@material-ui/core/styles';\nimport firebase from \"firebase\";\nimport { DATABASE_URL } from \"../index\";\n\nconst styles = theme => ({\n  list: {\n    width: '100%',\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: theme.spacing(4),\n    boxShadow: '0 .5rem 1rem rgba(0,0,0,0.15)'\n  },\n  undone: {\n    color: 'rgba(0, 0, 0, 0.9)',\n  },\n  done: {\n    color: 'rgba(0, 0, 0, 0.4)',\n    textDecoration: 'line-through',\n    textDecorationColor: 'rgba(0, 0, 0, 0.3)'\n  },\n})\n\nclass ToDoItem extends React.Component {\n  state = {\n    task: this.props.task,\n    done: this.props.done,\n  };\n\n  handleOnDeleteTask = () => {\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo/${this.props.id}.json`, {\n      method: \"DELETE\",\n    }).then(() => {\n      this.props.onFetchTasks();\n    });\n  };\n  handleOnDoneTask = (event) => {\n    this.setState(\n      {\n        done: !this.state.done,\n      },\n      () => {\n        const user = firebase.auth().currentUser;\n        fetch(`${DATABASE_URL}/users/${user.uid}/todo/${this.props.id}.json`, {\n          method: \"PUT\",\n          body: JSON.stringify(this.state),\n        }).then(() => {\n          this.props.onFetchTasks();\n        });\n      }\n    );\n  };\n\n  handleOnEditClick = (event) => {\n    event.preventDefault();\n    this.props.onEdit(this.props.id);\n    console.log(this.props.id)\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n      <List className={classes.list}>\n          <ListItem dense button onClick={this.handleOnDoneTask}>\n              <ListItemIcon>\n              <Tooltip title={this.state.done ? 'Oznacz jako niezrobione' : 'Oznacz jako zrobione'}>\n                <Checkbox\n                edge=\"start\"\n                tabIndex={-1}\n                disableRipple\n                  type=\"checkbox\"\n                  onChange={this.handleOnDoneTask}\n                  checked={this.state.done}\n                />\n                </Tooltip>\n              </ListItemIcon>\n            <ListItemText className={this.state.done ? classes.done : classes.undone}>    \n                {this.props.task} \n            </ListItemText>\n            <ListItemSecondaryAction>\n            <Tooltip title=\"Edycja\">\n              <IconButton  onClick={this.handleOnEditClick}>\n                 <EditIcon />\n              </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Usuń\">\n              <IconButton edge=\"end\" onClick={this.handleOnDeleteTask} color=\"secondary\">\n                 <DeleteIcon />\n              </IconButton>\n              </Tooltip>\n            </ListItemSecondaryAction>\n          </ListItem>\n          </List>\n\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ToDoItem);","import React from \"react\";\nimport { Checkbox, Tooltip, List, ListItem, ListItemIcon,  ListItemText, ListItemSecondaryAction, TextField } from '@material-ui/core/';\nimport IconButton from '@material-ui/core/IconButton';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport firebase from \"firebase\";\nimport { DATABASE_URL } from \"../index\";\n\nconst styles = theme => ({\n  list: {\n    width: '100%',\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: theme.spacing(2),\n    boxShadow: '0 .5rem 1rem rgba(0,0,0,0.15)'\n  },\n})\n\nclass ToDoItemEdit extends React.Component {\n  state = {\n    task: this.props.task,\n    done: this.props.done,\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      task: event.target.value,\n    });\n  };\n\n  handleOnCloseClick = () => {\n    this.props.onClose();\n  };\n\n  handleOnSaveClick = () => {\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo/${this.props.id}.json`, {\n      method: \"PUT\",\n      body: JSON.stringify(this.state),\n    }).then(() => {\n      this.props.onSave();\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n     <List className={classes.list}>\n     <ListItem dense button onClick={this.handleOnDoneTask}>\n       <ListItemIcon>\n       <Checkbox\n       edge=\"start\"\n       tabIndex={-1}\n       disableRipple\n         type=\"checkbox\"\n         onChange={this.handleOnDoneTask}\n         checked={this.state.done}\n       />\n       </ListItemIcon>\n       <ListItemText>   \n         <TextField\n            variant=\"outlined\"\n            color=\"secondary\"\n            size='small'\n              name=\"task\"\n              value={this.state.task}\n              onChange={this.handleOnChange}\n  /> </ListItemText>\n       <ListItemSecondaryAction>\n       <Tooltip title=\"Zapisz\">\n       <IconButton onClick={this.handleOnSaveClick} >\n              <SaveIcon />\n              </IconButton>\n         </Tooltip>\n         <Tooltip title=\"Anuluj\">\n              <IconButton onClick={this.handleOnCloseClick} color=\"secondary\">\n              <CloseIcon />\n              </IconButton>\n              </Tooltip>\n       </ListItemSecondaryAction>\n     </ListItem>\n</List>\n          \n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ToDoItemEdit);","import React from \"react\";\nimport AddTask from \"./AddTask\";\nimport ToDoItem from \"./ToDoItem\";\nimport ToDoItemEdit from \"./ToDoItemEdit\";\nimport { Tooltip, Fab } from '@material-ui/core/';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { withStyles } from '@material-ui/core/styles';\nimport firebase from 'firebase';\nimport { DATABASE_URL } from \"../index\";\n\n\nconst styles = theme => ({\n  list: {\n    width: '100%',\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: theme.spacing(4),\n    boxShadow: '0 .5rem 1rem rgba(0,0,0,0.15)'\n  },\n})\nclass ToDo extends React.Component {\n  state = {\n    todo: [],\n    editId: null,\n  };\n\n  fetchTasks = () => {\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo.json`)\n      .then((response) => response.json())\n      .then((todo) => {\n        const todoList = todo\n          ? Object.keys(todo).map((key) => {\n              return {\n                id: key,\n                ...todo[key],\n              };\n            })\n          : [];\n        this.setState({\n          todo: todoList,\n        });\n      })\n  };\n\n  handleItemEdit = (editId) => {\n    this.setState({\n      editId,\n    });\n  };\n\n  resetEditId = () => {\n    this.setState({\n      editId: null,\n    });\n  };\n\n  handleItemSave = () => {\n    this.fetchTasks();\n    this.resetEditId();\n  };\n\n  handleOnSignOutClick = () => {\n    firebase.auth().signOut();\n}\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n      <AddTask onFetchTasks={this.fetchTasks}/>\n      {this.state.todo\n            .map((todoItem) =>\n              todoItem.id === this.state.editId ? (\n                <ToDoItemEdit\n                  key={todoItem.id}\n                  onClose={this.resetEditId}\n                  onSave={this.handleItemSave}\n                  onFetchTasks={this.fetchTasks}\n                  {...todoItem}\n                />\n              ) : (\n                <ToDoItem\n                  key={todoItem.id}\n                  onFetchTasks={this.fetchTasks}\n                  onEdit={this.handleItemEdit}\n                  {...todoItem}\n                />\n              )\n            )}\n             <Tooltip title=\"Wyloguj się\">\n                <Fab color=\"secondary\" className={classes.icon} onClick={this.handleOnSignOutClick}>\n                    <ExitToAppIcon />\n                </Fab>\n        </Tooltip>\n  </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ToDo);","import React from \"react\";\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  nav: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  icons: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  icon: {\n    display: 'flex',\n    alignSelf: 'flex-end',\n  }\n})\n\nclass Nav extends React.Component { \n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.nav}>\n          <ListAltIcon fontSize='large' color='secondary' /> \n     <h1 style={{letterSpacing: '1px'}}> to do list</h1>\n    \n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Nav);","import React from \"react\";\nimport {  Button, TextField, Link } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport firebase from \"firebase\";\n\nconst styles = theme => ({\n    form: {\n        width: '100%',\n        maxWidth: 400, \n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n      },\n      input: {\n        width: '100%',\n        marginBottom: theme.spacing(3),\n      },\n      signUp: {\n        display: 'flex',\n        justifyContent: 'center',\n        /*fontSize: '14px',*/\n      },\n      link: {\n        fontWeight: '600',\n        marginLeft: '1.5%',\n        fontSize: '14px', \n      }\n})\nclass SignIn extends React.Component { \n\n    state = {\n        email: '',\n        password: '',\n        error: '',\n        errorStyle: false,\n        signUp: false,\n\n    }\n\n    validation = (error) => {\n        if(error.code === 'auth/invalid-email') {\n          return ('Niepoprawny adres e-mail.')\n        } else if (error.code === 'auth/weak-password') {\n          return ('Hasło musi posiadać co najmniej 6 znaków.')\n        } else {\n          return ('Nieudana próba rejestracji.')\n        }\n      }\n\n    handleOnChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleOnSignUp = (event) => {\n        event.preventDefault();\n        this.setState({\n            signUp: !this.state.signUp,\n        })\n    }\n\n    handleOnSubmit = (event) => {\n        event.preventDefault();\n\n        if(this.state.signUp) {\n            firebase.auth()\n            .createUserWithEmailAndPassword(this.state.email, this.state.password)\n            .then(() => {\n                const user = firebase.auth().currentUser;\n                firebase\n                        .database()\n                        .ref(`/users/${user.uid}`)\n                        .set({\n                          email: this.state.email\n              })\n                })\n            .catch((error) => {\n              this.setState({\n                error: this.validation(error),\n                errorStyle: true\n            })\n            })\n    \n    } else {\n        firebase.auth()\n                .signInWithEmailAndPassword(this.state.email, this.state.password)\n                .then((userData) => {\n                    console.log(userData)\n                })\n                .catch((error) => {\n                  this.setState({\n                    error: 'Nieudana próba logowania.',\n                    errorStyle: true\n                })\n            })\n    }\n      }\n\n    render() {\n      const { classes } = this.props;\n      return (\n        <>\n        <form\n        className={classes.form}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={this.handleOnSubmit}\n        >\n           <TextField\n            className={classes.input}\n            variant=\"outlined\"\n            color=\"secondary\"\n            size='small'\n            label=\"E-mail\"\n                    name=\"email\" \n                    autoComplete=\"username\"\n                    value={this.state.email}\n                    onChange={this.handleOnChange}\n                    error={this.state.errorStyle}\n\n  />\n\n<TextField \n                    className={classes.input}\n                    color=\"secondary\"\n                    type=\"password\"\n                    label=\"Hasło\"\n                    name=\"password\" \n                    variant=\"outlined\"\n                    size=\"small\" \n                    autoComplete=\"current-password\"\n                    value={this.state.password}\n                    onChange={this.handleOnChange}\n                    helperText={this.state.error}\n                    error={this.state.errorStyle}\n                  />\n       \n          <Button\n            className={classes.input}\n                type=\"submit\"\n                variant=\"contained\" \n                color=\"secondary\"\n          > { this.state.signUp ? 'Zarejestruj się' : 'Zaloguj się' }\n          </Button> \n        { this.state.signUp ?\n          (<p className={classes.signUp}>Posiadasz już konto? <Link component=\"button\"color=\"secondary\" className={classes.link} onClick={this.handleOnSignUp}> Zaloguj się.</Link></p>\n              ) : \n         (<p className={classes.signUp}>Nie posiadasz jeszcze konta?  <Link component=\"button\" color=\"secondary\" className={classes.link}  onClick={this.handleOnSignUp}> Zarejestruj się.</Link></p>\n         )\n        }\n        </form>\n      </>\n      )\n    }\n  }\n  \n  export default withStyles(styles)(SignIn);","import React from \"react\";\nimport ToDo from \"./components/ToDo\";\nimport Nav from \"./components/Nav\";\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from '@material-ui/core/styles';\nimport SignIn from \"./components/SignIn\";\nimport firebase from \"firebase\";\n\nconst Logged = 'Logged'\nconst Login = 'Login'\n\n\nconst styles = theme => ({\n    toDoApp: {\n      padding: '5%',\n      height: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column',\n      fontSize: '14px',\n      fontFamily: 'Roboto'\n  },\n})\n\nclass App extends React.Component { \n  state = {\n    user: null,\n  }\n\n  handleLogin = () => {\n    this.setState({\n      user: Login\n    })\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (firebase.auth().currentUser) {\n        this.setState({\n          user: Logged\n        })\n      } else {\n        this.setState({\n          user: null\n        })\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n      <Container className={classes.toDoApp} >\n          <Nav /> \n          { this.state.user === Logged ? <ToDo /> : <SignIn onLogin={this.handleLogin} /> }\n      </Container>\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBqX0NLqBomHbVxppsvUju6myikZ7zJpqU\",\n  authDomain: \"todoapp-36408.firebaseapp.com\",\n  databaseURL: \"https://todoapp-36408.firebaseio.com\",\n  projectId: \"todoapp-36408\",\n  storageBucket: \"todoapp-36408.appspot.com\",\n  messagingSenderId: \"20656447326\",\n  appId: \"1:20656447326:web:a8975420dab8f64293b9cf\",\n};\n\nexport const DATABASE_URL = firebaseConfig.databaseURL;\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}