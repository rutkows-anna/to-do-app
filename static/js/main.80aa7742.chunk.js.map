{"version":3,"sources":["components/AddTask.js","components/ToDoItem.js","components/ToDoItemEdit.js","components/ToDo.js","components/Nav.js","components/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["AddTask","state","task","done","handleOnChange","event","setState","target","value","handleOnKeyUp","key","handleOnSubmit","preventDefault","user","firebase","auth","currentUser","fetch","DATABASE_URL","uid","method","body","JSON","stringify","then","props","onFetchTasks","classes","this","className","form","noValidate","autoComplete","onSubmit","TextField","input","variant","color","size","onChange","onKeyUp","Button","type","startIcon","React","Component","withStyles","theme","width","maxWidth","marginTop","spacing","marginBottom","ToDoItem","handleOnDeleteTask","id","handleOnDoneTask","console","log","handleOnEditClick","onEdit","List","list","ListItem","dense","button","onClick","ListItemIcon","Tooltip","title","Checkbox","edge","tabIndex","disableRipple","checked","ListItemText","undone","ListItemSecondaryAction","IconButton","backgroundColor","palette","background","paper","boxShadow","textDecoration","textDecorationColor","ToDoItemEdit","handleOnCloseClick","onClose","handleOnSaveClick","onSave","name","ToDo","todo","editId","loading","fetchTasks","response","json","todoList","Object","keys","map","handleItemEdit","resetEditId","handleItemSave","handleOnSignOutClick","signOut","CircularProgress","loader","todoItem","Fab","icon","Nav","nav","fontSize","style","letterSpacing","display","justifyContent","alignItems","flexDirection","icons","alignSelf","SignIn","email","password","error","errorStyle","signUp","validation","code","handleOnSignUp","createUserWithEmailAndPassword","database","ref","set","catch","signInWithEmailAndPassword","label","helperText","Link","component","link","fontWeight","marginLeft","App","onAuthStateChanged","Container","toDoApp","padding","height","fontFamily","Boolean","window","location","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.80aa7742.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, TextField } from \"@material-ui/core/\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"firebase\";\nimport { DATABASE_URL } from \"../index\";\n\nconst styles = (theme) => ({\n  form: {\n    width: \"100%\",\n    maxWidth: 600,\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: theme.spacing(3),\n  },\n});\n\nclass AddTask extends React.Component {\n  state = {\n    task: \"\",\n    done: false,\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      task: event.target.value,\n    });\n  };\n\n  handleOnKeyUp = (event) => {\n    if (event.key === \"Enter\") {\n      this.handleOnSubmit();\n    }\n  };\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo.json`, {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n    }).then(() => {\n      this.props.onFetchTasks();\n      this.setState({\n        task: \"\",\n      });\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <form\n          className={classes.form}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={this.handleOnSubmit}\n        >\n          <TextField\n            className={classes.input}\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            onChange={this.handleOnChange}\n            onKeyUp={this.handleOnKeyUp}\n            value={this.state.task}\n          />\n\n          <Button\n            className={classes.input}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<AddIcon />}\n          >\n            Dodaj zadanie\n          </Button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(AddTask);\n","import React from \"react\";\nimport {\n  Checkbox,\n  Tooltip,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from \"@material-ui/core/\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"firebase\";\nimport { DATABASE_URL } from \"../index\";\n\nconst styles = (theme) => ({\n  list: {\n    width: \"100%\",\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: theme.spacing(4),\n    boxShadow: \"0 .5rem 1rem rgba(0,0,0,0.15)\",\n  },\n  undone: {\n    color: \"rgba(0, 0, 0, 0.9)\",\n  },\n  done: {\n    color: \"rgba(0, 0, 0, 0.4)\",\n    textDecoration: \"line-through\",\n    textDecorationColor: \"rgba(0, 0, 0, 0.3)\",\n  },\n});\n\nclass ToDoItem extends React.Component {\n  state = {\n    task: this.props.task,\n    done: this.props.done,\n  };\n\n  handleOnDeleteTask = () => {\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo/${this.props.id}.json`, {\n      method: \"DELETE\",\n    }).then(() => {\n      this.props.onFetchTasks();\n    });\n  };\n  handleOnDoneTask = (event) => {\n    this.setState(\n      {\n        done: !this.state.done,\n      },\n      () => {\n        const user = firebase.auth().currentUser;\n        fetch(`${DATABASE_URL}/users/${user.uid}/todo/${this.props.id}.json`, {\n          method: \"PATCH\",\n          body: JSON.stringify(this.state.done),\n        }).then(() => {\n          this.props.onFetchTasks();\n        });\n      }\n    );\n    console.log(this.state.done)\n  };\n\n  handleOnEditClick = (event) => {\n    event.preventDefault();\n    this.props.onEdit(this.props.id);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <List className={classes.list}>\n          <ListItem dense button onClick={this.handleOnDoneTask}>\n            <ListItemIcon>\n              <Tooltip\n                title={\n                  this.state.done\n                    ? \"Oznacz jako niezrobione\"\n                    : \"Oznacz jako zrobione\"\n                }\n              >\n                <Checkbox\n                  edge=\"start\"\n                  tabIndex={-1}\n                  disableRipple\n                  type=\"checkbox\"\n                  onChange={this.handleOnDoneTask}\n                  checked={this.state.done}\n                />\n              </Tooltip>\n            </ListItemIcon>\n            <ListItemText\n              className={this.state.done ? classes.done : classes.undone}\n            >\n              {this.props.task}\n            </ListItemText>\n            <ListItemSecondaryAction>\n              <Tooltip title=\"Edycja\">\n                <IconButton onClick={this.handleOnEditClick}>\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Usuń\">\n                <IconButton\n                  edge=\"end\"\n                  onClick={this.handleOnDeleteTask}\n                  color=\"secondary\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ToDoItem);\n","import React from \"react\";\nimport {\n  Checkbox,\n  Tooltip,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  TextField,\n} from \"@material-ui/core/\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"firebase\";\nimport { DATABASE_URL } from \"../index\";\n\nconst styles = (theme) => ({\n  list: {\n    width: \"100%\",\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: theme.spacing(2),\n    boxShadow: \"0 .5rem 1rem rgba(0,0,0,0.15)\",\n  },\n});\n\nclass ToDoItemEdit extends React.Component {\n  state = {\n    task: this.props.task,\n    done: this.props.done,\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      task: event.target.value,\n    });\n  };\n\n  handleOnCloseClick = () => {\n    this.props.onClose();\n  };\n\n  handleOnSaveClick = () => {\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo/${this.props.id}.json`, {\n      method: \"PUT\",\n      body: JSON.stringify(this.state),\n    }).then(() => {\n      this.props.onSave();\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <List className={classes.list}>\n          <ListItem dense button onClick={this.handleOnDoneTask}>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                tabIndex={-1}\n                disableRipple\n                type=\"checkbox\"\n                onChange={this.handleOnDoneTask}\n                checked={this.state.done}\n              />\n            </ListItemIcon>\n            <ListItemText>\n              <TextField\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n                name=\"task\"\n                value={this.state.task}\n                onChange={this.handleOnChange}\n              />{\" \"}\n            </ListItemText>\n            <ListItemSecondaryAction>\n              <Tooltip title=\"Zapisz\">\n                <IconButton onClick={this.handleOnSaveClick}>\n                  <SaveIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Anuluj\">\n                <IconButton onClick={this.handleOnCloseClick} color=\"secondary\">\n                  <CloseIcon />\n                </IconButton>\n              </Tooltip>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ToDoItemEdit);\n","import React from \"react\";\nimport AddTask from \"./AddTask\";\nimport ToDoItem from \"./ToDoItem\";\nimport ToDoItemEdit from \"./ToDoItemEdit\";\nimport { Tooltip, Fab, CircularProgress } from \"@material-ui/core/\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"firebase\";\nimport { DATABASE_URL } from \"../index\";\n\nconst styles = (theme) => ({\n  list: {\n    width: \"100%\",\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: theme.spacing(4),\n    boxShadow: \"0 .5rem 1rem rgba(0,0,0,0.15)\",\n  },\n  loader: {\n    marginBottom: theme.spacing(2),\n  },\n});\nclass ToDo extends React.Component {\n  state = {\n    todo: [],\n    editId: null,\n    loading: true,\n  };\n\n  fetchTasks = () => {\n    const user = firebase.auth().currentUser;\n    fetch(`${DATABASE_URL}/users/${user.uid}/todo.json`)\n      .then((response) => response.json())\n      .then((todo) => {\n        const todoList = todo\n          ? Object.keys(todo).map((key) => {\n              return {\n                id: key,\n                ...todo[key],\n              };\n            })\n          : [];\n        this.setState({\n          todo: todoList,\n          loading: false,\n        });\n      });\n  };\n\n  handleItemEdit = (editId) => {\n    this.setState({\n      editId,\n    });\n  };\n\n  resetEditId = () => {\n    this.setState({\n      editId: null,\n    });\n  };\n\n  handleItemSave = () => {\n    this.fetchTasks();\n    this.resetEditId();\n  };\n\n  handleOnSignOutClick = () => {\n    firebase.auth().signOut();\n  };\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <AddTask onFetchTasks={this.fetchTasks} />\n        {this.state.loading ? (\n          <CircularProgress color=\"secondary\" className={classes.loader} />\n        ) : (\n          this.state.todo.map((todoItem) =>\n            todoItem.id === this.state.editId ? (\n              <ToDoItemEdit\n                key={todoItem.id}\n                onClose={this.resetEditId}\n                onSave={this.handleItemSave}\n                onFetchTasks={this.fetchTasks}\n                {...todoItem}\n              />\n            ) : (\n              <ToDoItem\n                key={todoItem.id}\n                onFetchTasks={this.fetchTasks}\n                onEdit={this.handleItemEdit}\n                {...todoItem}\n              />\n            )\n          )\n        )}\n        <Tooltip title=\"Wyloguj się\">\n          <Fab\n            color=\"secondary\"\n            className={classes.icon}\n            onClick={this.handleOnSignOutClick}\n          >\n            <ExitToAppIcon />\n          </Fab>\n        </Tooltip>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ToDo);\n","import React from \"react\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = (theme) => ({\n  nav: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  icons: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  icon: {\n    display: \"flex\",\n    alignSelf: \"flex-end\",\n  },\n});\n\nclass Nav extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.nav}>\n        <ListAltIcon fontSize=\"large\" color=\"secondary\" />\n        <h1 style={{ letterSpacing: \"1px\" }}> to do list</h1>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Nav);\n","import React from \"react\";\nimport { Button, TextField, Link } from \"@material-ui/core/\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport firebase from \"firebase\";\n\nconst styles = (theme) => ({\n  form: {\n    width: \"100%\",\n    maxWidth: 400,\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: theme.spacing(3),\n  },\n  signUp: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  link: {\n    fontWeight: \"600\",\n    marginLeft: \"1.5%\",\n    fontSize: \"14px\",\n  },\n});\nclass SignIn extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    errorStyle: false,\n    signUp: false,\n  };\n\n  validation = (error) => {\n    if (error.code === \"auth/invalid-email\") {\n      return \"Niepoprawny adres e-mail.\";\n    } else if (error.code === \"auth/weak-password\") {\n      return \"Hasło musi posiadać co najmniej 6 znaków.\";\n    } else {\n      return \"Nieudana próba rejestracji.\";\n    }\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleOnSignUp = (event) => {\n    event.preventDefault();\n    this.setState({\n      signUp: !this.state.signUp,\n    });\n  };\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.signUp) {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then(() => {\n          const user = firebase.auth().currentUser;\n          firebase.database().ref(`/users/${user.uid}`).set({\n            email: this.state.email,\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            error: this.validation(error),\n            errorStyle: true,\n          });\n        });\n    } else {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .catch((error) => {\n          this.setState({\n            error: \"Nieudana próba logowania.\",\n            errorStyle: true,\n          });\n        });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <form\n          className={classes.form}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={this.handleOnSubmit}\n        >\n          <TextField\n            className={classes.input}\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            label=\"E-mail\"\n            name=\"email\"\n            autoComplete=\"username\"\n            value={this.state.email}\n            onChange={this.handleOnChange}\n            error={this.state.errorStyle}\n          />\n\n          <TextField\n            className={classes.input}\n            color=\"secondary\"\n            type=\"password\"\n            label=\"Hasło\"\n            name=\"password\"\n            variant=\"outlined\"\n            size=\"small\"\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handleOnChange}\n            helperText={this.state.error}\n            error={this.state.errorStyle}\n          />\n\n          <Button\n            className={classes.input}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            {\" \"}\n            {this.state.signUp ? \"Zarejestruj się\" : \"Zaloguj się\"}\n          </Button>\n          {this.state.signUp ? (\n            <p className={classes.signUp}>\n              Posiadasz już konto?{\" \"}\n              <Link\n                component=\"button\"\n                color=\"secondary\"\n                className={classes.link}\n                onClick={this.handleOnSignUp}\n              >\n                {\" \"}\n                Zaloguj się.\n              </Link>\n            </p>\n          ) : (\n            <p className={classes.signUp}>\n              Nie posiadasz jeszcze konta?{\" \"}\n              <Link\n                component=\"button\"\n                color=\"secondary\"\n                className={classes.link}\n                onClick={this.handleOnSignUp}\n              >\n                {\" \"}\n                Zarejestruj się.\n              </Link>\n            </p>\n          )}\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignIn);\n","import React from \"react\";\nimport ToDo from \"./components/ToDo\";\nimport Nav from \"./components/Nav\";\nimport { Container, CircularProgress } from \"@material-ui/core/\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SignIn from \"./components/SignIn\";\nimport firebase from \"firebase\";\n\nconst styles = (theme) => ({\n  toDoApp: {\n    padding: \"5%\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    fontSize: \"14px\",\n    fontFamily: \"Roboto\",\n  },\n});\n\nclass App extends React.Component {\n  state = {\n    user: null,\n    loading: true,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (firebase.auth().currentUser) {\n        this.setState({\n          user: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          user: false,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <Container className={classes.toDoApp}>\n          <Nav />\n          {this.state.loading ? (\n            <CircularProgress color=\"secondary\" className={classes.loader} />\n          ) : this.state.user ? (\n            <ToDo />\n          ) : (\n            <SignIn />\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBqX0NLqBomHbVxppsvUju6myikZ7zJpqU\",\n  authDomain: \"todoapp-36408.firebaseapp.com\",\n  databaseURL: \"https://todoapp-36408.firebaseio.com\",\n  projectId: \"todoapp-36408\",\n  storageBucket: \"todoapp-36408.appspot.com\",\n  messagingSenderId: \"20656447326\",\n  appId: \"1:20656447326:web:a8975420dab8f64293b9cf\",\n};\n\nexport const DATABASE_URL = firebaseConfig.databaseURL;\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}